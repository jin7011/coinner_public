// Generated by view binder compiler. Do not edit!
package com.coinner.coin_kotlin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.balysv.materialripple.MaterialRippleLayout;
import com.coinner.coin_kotlin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCoinBinding implements ViewBinding {
  @NonNull
  private final MaterialRippleLayout rootView;

  @NonNull
  public final TextView CurrencyPriceT;

  @NonNull
  public final ConstraintLayout Layout;

  @NonNull
  public final LinearLayout NameLinearLayout;

  @NonNull
  public final TextView NameSubT;

  @NonNull
  public final TextView NameT;

  @NonNull
  public final FrameLayout f;

  @NonNull
  public final FrameLayout f2;

  @NonNull
  public final TextView fluctateRateT;

  @NonNull
  public final TextView totalT;

  private ItemCoinBinding(@NonNull MaterialRippleLayout rootView, @NonNull TextView CurrencyPriceT,
      @NonNull ConstraintLayout Layout, @NonNull LinearLayout NameLinearLayout,
      @NonNull TextView NameSubT, @NonNull TextView NameT, @NonNull FrameLayout f,
      @NonNull FrameLayout f2, @NonNull TextView fluctateRateT, @NonNull TextView totalT) {
    this.rootView = rootView;
    this.CurrencyPriceT = CurrencyPriceT;
    this.Layout = Layout;
    this.NameLinearLayout = NameLinearLayout;
    this.NameSubT = NameSubT;
    this.NameT = NameT;
    this.f = f;
    this.f2 = f2;
    this.fluctateRateT = fluctateRateT;
    this.totalT = totalT;
  }

  @Override
  @NonNull
  public MaterialRippleLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCoinBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCoinBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_coin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCoinBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Currency_price_T;
      TextView CurrencyPriceT = ViewBindings.findChildViewById(rootView, id);
      if (CurrencyPriceT == null) {
        break missingId;
      }

      id = R.id.Layout;
      ConstraintLayout Layout = ViewBindings.findChildViewById(rootView, id);
      if (Layout == null) {
        break missingId;
      }

      id = R.id.Name_LinearLayout;
      LinearLayout NameLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (NameLinearLayout == null) {
        break missingId;
      }

      id = R.id.Name_sub_T;
      TextView NameSubT = ViewBindings.findChildViewById(rootView, id);
      if (NameSubT == null) {
        break missingId;
      }

      id = R.id.Name_T;
      TextView NameT = ViewBindings.findChildViewById(rootView, id);
      if (NameT == null) {
        break missingId;
      }

      id = R.id.f;
      FrameLayout f = ViewBindings.findChildViewById(rootView, id);
      if (f == null) {
        break missingId;
      }

      id = R.id.f2;
      FrameLayout f2 = ViewBindings.findChildViewById(rootView, id);
      if (f2 == null) {
        break missingId;
      }

      id = R.id.fluctate_rate_T;
      TextView fluctateRateT = ViewBindings.findChildViewById(rootView, id);
      if (fluctateRateT == null) {
        break missingId;
      }

      id = R.id.total_T;
      TextView totalT = ViewBindings.findChildViewById(rootView, id);
      if (totalT == null) {
        break missingId;
      }

      return new ItemCoinBinding((MaterialRippleLayout) rootView, CurrencyPriceT, Layout,
          NameLinearLayout, NameSubT, NameT, f, f2, fluctateRateT, totalT);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
