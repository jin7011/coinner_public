// Generated by view binder compiler. Do not edit!
package com.coinner.coin_kotlin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.balysv.materialripple.MaterialRippleLayout;
import com.coinner.coin_kotlin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPostBinding implements ViewBinding {
  @NonNull
  private final MaterialRippleLayout rootView;

  @NonNull
  public final TextView coinNameT;

  @NonNull
  public final TextView commentNumPostItem;

  @NonNull
  public final TextView contentT;

  @NonNull
  public final LinearLayout dataLinearLayout;

  @NonNull
  public final TextView dateT;

  @NonNull
  public final TextView goodNumPostItem;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final ImageView imageView5;

  @NonNull
  public final TextView nicknameT;

  @NonNull
  public final ImageView postImage;

  @NonNull
  public final LinearLayout titleContentLinearLayout;

  @NonNull
  public final TextView titleT;

  private ItemPostBinding(@NonNull MaterialRippleLayout rootView, @NonNull TextView coinNameT,
      @NonNull TextView commentNumPostItem, @NonNull TextView contentT,
      @NonNull LinearLayout dataLinearLayout, @NonNull TextView dateT,
      @NonNull TextView goodNumPostItem, @NonNull ImageView imageView4,
      @NonNull ImageView imageView5, @NonNull TextView nicknameT, @NonNull ImageView postImage,
      @NonNull LinearLayout titleContentLinearLayout, @NonNull TextView titleT) {
    this.rootView = rootView;
    this.coinNameT = coinNameT;
    this.commentNumPostItem = commentNumPostItem;
    this.contentT = contentT;
    this.dataLinearLayout = dataLinearLayout;
    this.dateT = dateT;
    this.goodNumPostItem = goodNumPostItem;
    this.imageView4 = imageView4;
    this.imageView5 = imageView5;
    this.nicknameT = nicknameT;
    this.postImage = postImage;
    this.titleContentLinearLayout = titleContentLinearLayout;
    this.titleT = titleT;
  }

  @Override
  @NonNull
  public MaterialRippleLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.coinNameT;
      TextView coinNameT = ViewBindings.findChildViewById(rootView, id);
      if (coinNameT == null) {
        break missingId;
      }

      id = R.id.commentNum_postItem;
      TextView commentNumPostItem = ViewBindings.findChildViewById(rootView, id);
      if (commentNumPostItem == null) {
        break missingId;
      }

      id = R.id.contentT;
      TextView contentT = ViewBindings.findChildViewById(rootView, id);
      if (contentT == null) {
        break missingId;
      }

      id = R.id.data_LinearLayout;
      LinearLayout dataLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (dataLinearLayout == null) {
        break missingId;
      }

      id = R.id.dateT;
      TextView dateT = ViewBindings.findChildViewById(rootView, id);
      if (dateT == null) {
        break missingId;
      }

      id = R.id.goodNum_postItem;
      TextView goodNumPostItem = ViewBindings.findChildViewById(rootView, id);
      if (goodNumPostItem == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.imageView5;
      ImageView imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.nicknameT;
      TextView nicknameT = ViewBindings.findChildViewById(rootView, id);
      if (nicknameT == null) {
        break missingId;
      }

      id = R.id.postImage;
      ImageView postImage = ViewBindings.findChildViewById(rootView, id);
      if (postImage == null) {
        break missingId;
      }

      id = R.id.title_content_LinearLayout;
      LinearLayout titleContentLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (titleContentLinearLayout == null) {
        break missingId;
      }

      id = R.id.titleT;
      TextView titleT = ViewBindings.findChildViewById(rootView, id);
      if (titleT == null) {
        break missingId;
      }

      return new ItemPostBinding((MaterialRippleLayout) rootView, coinNameT, commentNumPostItem,
          contentT, dataLinearLayout, dateT, goodNumPostItem, imageView4, imageView5, nicknameT,
          postImage, titleContentLinearLayout, titleT);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
