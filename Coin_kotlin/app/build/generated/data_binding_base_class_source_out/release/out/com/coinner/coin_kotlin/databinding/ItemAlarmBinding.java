// Generated by view binder compiler. Do not edit!
package com.coinner.coin_kotlin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.coinner.coin_kotlin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAlarmBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout Layout;

  @NonNull
  public final Button alarmDeleteBtn;

  @NonNull
  public final TextView alarmPriceT;

  @NonNull
  public final FrameLayout f;

  @NonNull
  public final TextView textView5;

  private ItemAlarmBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout Layout,
      @NonNull Button alarmDeleteBtn, @NonNull TextView alarmPriceT, @NonNull FrameLayout f,
      @NonNull TextView textView5) {
    this.rootView = rootView;
    this.Layout = Layout;
    this.alarmDeleteBtn = alarmDeleteBtn;
    this.alarmPriceT = alarmPriceT;
    this.f = f;
    this.textView5 = textView5;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAlarmBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAlarmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_alarm, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAlarmBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout Layout = (ConstraintLayout) rootView;

      id = R.id.alarmDeleteBtn;
      Button alarmDeleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (alarmDeleteBtn == null) {
        break missingId;
      }

      id = R.id.alarmPriceT;
      TextView alarmPriceT = ViewBindings.findChildViewById(rootView, id);
      if (alarmPriceT == null) {
        break missingId;
      }

      id = R.id.f;
      FrameLayout f = ViewBindings.findChildViewById(rootView, id);
      if (f == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      return new ItemAlarmBinding((ConstraintLayout) rootView, Layout, alarmDeleteBtn, alarmPriceT,
          f, textView5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
